apply plugin: 'com.android.library'

android {
    compileSdkVersion 30
    buildToolsVersion '30.0.2'

    defaultConfig {
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
    }
    buildTypes
            {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility = 1.8
        sourceCompatibility = 1.8
    }
}

dependencies {
    implementation project(path: ':flurryAnalytics_12.7.0')
    // Recommended to add Google Play Services
    implementation 'com.google.android.gms:play-services-base:17.4.0'
}


repositories
        {
            jcenter()
        }


android.libraryVariants.all { variant ->

    // Task names.
    String variantName = "${variant.name.capitalize()}"; // Like 'Debug'
    String deployTaskGroup = "plugin";
    String deployTaskName = "deploy${variantName}Plugin"; // Like 'deployDebugPlugin'
    String dependencyTaskName = "assemble${variantName}"; // Like 'assembleDebug'

    // Source.
    String sourceAARFolder = "${buildDir.getPath()}/outputs/aar/";
    String sourceAARName = "${project.name}-${variant.name}.aar";

    // Target.
    String targetAssetFolder= "project-unity-FlurryDemo~\\Assets\\Plugins";
    //String targetAssetFolder = "Plugins";
    String targetAARFolder = "${rootDir.getPath()}/../${targetAssetFolder}"; // Navigate into 'Assets'
    String targetAARName = "FlurryAnalytics.aar"; // The form you ship your plugin

    // Create task.
    task(deployTaskName, dependsOn: dependencyTaskName, type: Copy) {
        logger.lifecycle("${variant.name.capitalize()} AAR Folder: ${sourceAARFolder}")
        logger.lifecycle("${variant.name.capitalize()} Target AAR Folder: ${targetAARFolder}")
        logger.lifecycle("${variant.name.capitalize()} Target AAR name: ${targetAARName}")

        into(targetAARFolder)
        from(sourceAARFolder)
        include(sourceAARName)
        rename(sourceAARName, targetAARName)

    }.group = deployTaskGroup
}